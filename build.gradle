plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven { url = "https://maven.nucleoid.xyz/" }
    maven {
        url "https://maven.theepicblock.nl"
        content { includeGroup("nl.theepicblock") }
    }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://jitpack.io' }
    mavenLocal()
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "nl.theepicblock:PolyMc:${project.polymc_version}"
    modImplementation "maven.modrinth:alloy-forgery:${project.alloy_forgery_version}"
    modImplementation "maven.modrinth:owo-lib:${project.owo_version}"
    modImplementation "maven.modrinth:polydex:${project.polydex_version}"
    modImplementation "eu.pb4:sgui:${project.sgui_version}"
    modRuntimeOnly "eu.pb4:player-data-api:${project.player_data_version}"
    modRuntimeOnly "xyz.nucleoid:more-codecs:${project.codecs_version}"
    modRuntimeOnly "eu.pb4:sidebar-api:${project.sidebar_version}"
    modRuntimeOnly 'me.lucko:fabric-permissions-api:0.2-SNAPSHOT'
    modRuntimeOnly "fr.catcore:server-translations-api:${project.translations_version}"

    // Resoucepack host testing
    modRuntimeOnly "eu.pb4:polymer-blocks:${project.polymer}"
    modRuntimeOnly "eu.pb4:polymer-bundled:${project.polymer}"
    modRuntimeOnly "eu.pb4:polymer-common:${project.polymer}"
    modRuntimeOnly "eu.pb4:polymer-core:${project.polymer}"
    modRuntimeOnly "eu.pb4:polymer-networking:${project.polymer}"
    modRuntimeOnly "eu.pb4:polymer-autohost:${project.polymer}"
    modRuntimeOnly "eu.pb4:polymer-resource-pack:${project.polymer}"
    modRuntimeOnly "eu.pb4:polymer-reg-sync-manipulator:${project.polymer}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}